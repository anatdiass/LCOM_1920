#include <lcom/lcf.h>
#include <lcom/timer.h>

#include <stdint.h>

#include "i8254.h"

int (timer_set_frequency)(uint8_t timer, uint32_t freq) {
  /* To be implemented by the students */
  printf("%s is not yet implemented!\n", __func__);

  return 1;
}

int (timer_subscribe_int)(uint8_t *bit_no) {
    /* To be implemented by the students */
  printf("%s is not yet implemented!\n", __func__);

  return 1;
}

int (timer_unsubscribe_int)() {
  /* To be implemented by the students */
  printf("%s is not yet implemented!\n", __func__);

  return 1;
}

void (timer_int_handler)() {
  /* To be implemented by the students */
  printf("%s is not yet implemented!\n", __func__);
}

int (timer_get_conf)(uint8_t timer, uint8_t *st) {
  /* To be implemented by the studen == TIMER_LSB_MSBts */
  printf("%s is not yet implemented!\n", __func__);

  return 1;
}

int (timer_display_conf)(uint8_t timer, uint8_t st,enum timer_status_field field){

  union timer_status_field_val conf;
  if(field == tsf_all){
    conf.byte = st;
  }
  else if(field == tsf_initial){
    if((st & TIMER_LSB) == TIMER_LSB){
      conf.in_mode = LSB_only;
    }
    else if((st & TIMER_MSB) == TIMER_MSB){
      conf.in_mode = MSB_only;
    }
    else if((st & TIMER_LSB_MSB) == TIMER_LSB_MSB){
      conf.in_mode = MSB_after_LSB;
    }
    else {
      conf.in_mode = INVAL_val;
      return 1;
    }
  }
  else if(field == tsf_mode){

  }

  return 0;
}
